# -*- coding: utf-8 -*-
"""EducationMerge-Geohash.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KYzz8Cf-OF9aBORAVqoKgjxIFEYI1p4r
"""
#Import libraries
import numpy as np 
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')
sns.set(style='white', context='notebook', palette='deep')

#load 3 year datasets
edueight = pd.read_csv('C:/Data Analytics/Sem 3/Dataset/EducationData/Chicago_Public_Schools_-_School_Progress_Reports_SY1819.csv')
eduseven = pd.read_csv('C:/Data Analytics/Sem 3/Dataset/EducationData/Chicago_Public_Schools_-_School_Progress_Reports_SY1718.csv',encoding = "ISO-8859-1")
edusix   = pd.read_csv('C:/Data Analytics/Sem 3/Dataset/EducationData/Chicago_Public_Schools_-_School_Progress_Reports_SY1617.csv')
edufive  = pd.read_csv('C:/Data Analytics/Sem 3/Dataset/EducationData/Chicago_Public_Schools_-_School_Progress_Reports_SY1516.csv')

#2018 edu data
edurefined = edueight[['Long_Name','Community_Area','School_Latitude','School_Longitude','Primary_Category','Teacher_Attendance_Year_1_Pct',
 'Teacher_Attendance_Year_2_Pct','Student_Attendance_Year_1_Pct',
 'Student_Attendance_Year_2_Pct','Misconducts_To_Suspensions_Year_1_Pct',
 'Misconducts_To_Suspensions_Year_2_Pct','Suspensions_Per_100_Students_Year_1_Pct',
'Suspensions_Per_100_Students_Year_2_Pct','Average_Length_Suspension_Year_1_Pct',
'Average_Length_Suspension_Year_2_Pct','Mobility_Rate_Pct','Chronic_Truancy_Pct','One_Year_Dropout_Rate_Year_1_Pct',
 'One_Year_Dropout_Rate_Year_2_Pct', 'Freshmen_On_Track_School_Pct_Year_2','Freshmen_On_Track_School_Pct_Year_1',
 'College_Enrollment_School_Pct_Year_2',
 'College_Enrollment_School_Pct_Year_1',
 'College_Persistence_School_Pct_Year_2',
 'College_Persistence_School_Pct_Year_1']]
#Compute average misconduct to suspensions rate
edurefined['Avg_Misconduct_Rate'] = (edurefined['Misconducts_To_Suspensions_Year_1_Pct'] + edurefined['Misconducts_To_Suspensions_Year_2_Pct'])/2
#Compute average suspension rate
edurefined['Avg_Suspension_Rate'] = (edurefined['Suspensions_Per_100_Students_Year_1_Pct'] + edurefined['Suspensions_Per_100_Students_Year_2_Pct'])/2
#Compute average attendance rate
edurefined['Avg_Student_Attendance_Rate'] = (edurefined['Student_Attendance_Year_1_Pct'] + edurefined['Student_Attendance_Year_2_Pct'])/2
#Compute average teacher attendance rate
edurefined['Avg_Teacher_Attendance_Rate'] = (edurefined['Teacher_Attendance_Year_1_Pct'] + edurefined['Teacher_Attendance_Year_2_Pct'])/2
edurefined['Average_Length_Suspension_Year_1_Pct'] = edurefined['Average_Length_Suspension_Year_1_Pct'].astype(str)
edurefined['Average_Length_Suspension_Year_2_Pct'] = edurefined['Average_Length_Suspension_Year_2_Pct'].astype(str)
edurefined['Average_Length_Suspension_Year_1_Pct'] = edurefined['Average_Length_Suspension_Year_1_Pct'].str.replace(' days','')
edurefined['Average_Length_Suspension_Year_2_Pct'] = edurefined['Average_Length_Suspension_Year_2_Pct'].str.replace(' days','')
edurefined['Average_Length_Suspension_Year_1_Pct'] = edurefined['Average_Length_Suspension_Year_1_Pct'].astype(float)
edurefined['Average_Length_Suspension_Year_2_Pct'] = edurefined['Average_Length_Suspension_Year_2_Pct'].astype(float)
edurefined['Avg_Suspension_Days'] = (edurefined['Average_Length_Suspension_Year_2_Pct'] + edurefined['Average_Length_Suspension_Year_1_Pct'])/2
edurefined.head()
#Replace missing values with median
edurefined['Avg_Misconduct_Rate'].fillna((edurefined['Avg_Misconduct_Rate'].median()), inplace=True)
edurefined['Avg_Suspension_Rate'].fillna((edurefined['Avg_Suspension_Rate'].median()), inplace=True)
edurefined['Avg_Teacher_Attendance_Rate'].fillna((edurefined['Avg_Teacher_Attendance_Rate'].median()), inplace=True)
edurefined['Avg_Student_Attendance_Rate'].fillna((edurefined['Avg_Student_Attendance_Rate'].median()), inplace=True)
edurefined['Mobility_Rate_Pct'].fillna((edurefined['Mobility_Rate_Pct'].median()), inplace=True)
edurefined['Chronic_Truancy_Pct'].fillna((edurefined['Chronic_Truancy_Pct'].median()), inplace=True)
edurefined['Avg_Suspension_Days'].fillna((edurefined['Avg_Suspension_Days'].median()), inplace=True)
edurefined['Teacher_Attendance_Year_1_Pct'].fillna((edurefined['Teacher_Attendance_Year_1_Pct'].median()), inplace=True)
edurefined['Teacher_Attendance_Year_2_Pct'].fillna((edurefined['Teacher_Attendance_Year_2_Pct'].median()), inplace=True)

edurefined['One_Year_Dropout_Rate_Year_1_Pct'].fillna((edurefined['One_Year_Dropout_Rate_Year_1_Pct'].median()), inplace=True)
edurefined['One_Year_Dropout_Rate_Year_2_Pct'].fillna((edurefined['One_Year_Dropout_Rate_Year_2_Pct'].median()), inplace=True)
edurefined['Freshmen_On_Track_School_Pct_Year_2'].fillna((edurefined['Freshmen_On_Track_School_Pct_Year_2'].median()), inplace=True)
edurefined['Freshmen_On_Track_School_Pct_Year_1'].fillna((edurefined['Freshmen_On_Track_School_Pct_Year_1'].median()), inplace=True)
edurefined['College_Enrollment_School_Pct_Year_2'].fillna((edurefined['College_Enrollment_School_Pct_Year_2'].median()), inplace=True)
edurefined['College_Enrollment_School_Pct_Year_1'].fillna((edurefined['College_Enrollment_School_Pct_Year_1'].median()), inplace=True)
edurefined['College_Persistence_School_Pct_Year_2'].fillna((edurefined['College_Persistence_School_Pct_Year_2'].median()), inplace=True)
edurefined['College_Persistence_School_Pct_Year_1'].fillna((edurefined['College_Persistence_School_Pct_Year_1'].median()), inplace=True)


edurefined['Misconducts_To_Suspensions_Year_1_Pct'].fillna((edurefined['Misconducts_To_Suspensions_Year_1_Pct'].median()), inplace=True)
edurefined['Misconducts_To_Suspensions_Year_2_Pct'].fillna((edurefined['Misconducts_To_Suspensions_Year_2_Pct'].median()), inplace=True)
edurefined['Suspensions_Per_100_Students_Year_1_Pct'].fillna((edurefined['Suspensions_Per_100_Students_Year_1_Pct'].median()), inplace=True)
edurefined['Suspensions_Per_100_Students_Year_2_Pct'].fillna((edurefined['Suspensions_Per_100_Students_Year_2_Pct'].median()), inplace=True)
edurefined['Average_Length_Suspension_Year_1_Pct'].fillna((edurefined['Average_Length_Suspension_Year_1_Pct'].median()), inplace=True)
edurefined['Average_Length_Suspension_Year_2_Pct'].fillna((edurefined['Average_Length_Suspension_Year_2_Pct'].median()), inplace=True)
#Convert location c-ordinates to geohash
import pygeohash as pgh
edurefined['geohash'] =  edurefined.apply(lambda x: pgh.encode(x.School_Latitude, x.School_Longitude, precision=5), axis=1)
#Group by geohash
edu_df = edurefined.groupby('geohash').mean().reset_index()
#Find school count in each geohash
edu_dfcount = edurefined.groupby('geohash')['Long_Name'].size().reset_index()
#Merge school count and geohash group data
edu_df = edu_df.merge(edu_dfcount,on='geohash')
edu_df = edu_df.rename(columns={'Long_Name':'SchoolCount'})
#Add year column
edu_df['Year'] = 2018
#Check for NA values
edu_df.isna().sum()

#Follow similar approach for other academic years
#2017 edu data
edurefined = eduseven[['Long_Name','Community Areas','School_Latitude','School_Longitude','Primary_Category','Teacher_Attendance_Year_1_Pct',
 'Teacher_Attendance_Year_2_Pct','Student_Attendance_Year_1_Pct',
 'Student_Attendance_Year_2_Pct','Misconducts_To_Suspensions_Year_1_Pct',
 'Misconducts_To_Suspensions_Year_2_Pct','Suspensions_Per_100_Students_Year_1_Pct',
'Suspensions_Per_100_Students_Year_2_Pct','Average_Length_Suspension_Year_1_Pct',
'Average_Length_Suspension_Year_2_Pct','Mobility_Rate_Pct','Chronic_Truancy_Pct','One_Year_Dropout_Rate_Year_1_Pct',
 'One_Year_Dropout_Rate_Year_2_Pct', 'Freshmen_On_Track_School_Pct_Year_2','Freshmen_On_Track_School_Pct_Year_1',
 'College_Enrollment_School_Pct_Year_2',
 'College_Enrollment_School_Pct_Year_1',
 'College_Persistence_School_Pct_Year_2',
 'College_Persistence_School_Pct_Year_1']]
#Compute average misconduct to suspensions rate
edurefined = edurefined.rename(columns={'Community Areas':'Community_Area'})
edurefined['Avg_Misconduct_Rate'] = (edurefined['Misconducts_To_Suspensions_Year_1_Pct'] + edurefined['Misconducts_To_Suspensions_Year_2_Pct'])/2
#Compute average suspension rate
edurefined['Avg_Suspension_Rate'] = (edurefined['Suspensions_Per_100_Students_Year_1_Pct'] + edurefined['Suspensions_Per_100_Students_Year_2_Pct'])/2
#Compute average attendance rate
edurefined['Avg_Student_Attendance_Rate'] = (edurefined['Student_Attendance_Year_1_Pct'] + edurefined['Student_Attendance_Year_2_Pct'])/2
#Compute average teacher attendance rate
edurefined['Avg_Teacher_Attendance_Rate'] = (edurefined['Teacher_Attendance_Year_1_Pct'] + edurefined['Teacher_Attendance_Year_2_Pct'])/2
#Average suspension days cleaning
edurefined['Average_Length_Suspension_Year_1_Pct'] = edurefined['Average_Length_Suspension_Year_1_Pct'].astype(str)
edurefined['Average_Length_Suspension_Year_2_Pct'] = edurefined['Average_Length_Suspension_Year_2_Pct'].astype(str)
edurefined['Average_Length_Suspension_Year_1_Pct'] = edurefined['Average_Length_Suspension_Year_1_Pct'].str.replace(' days','')
edurefined['Average_Length_Suspension_Year_2_Pct'] = edurefined['Average_Length_Suspension_Year_2_Pct'].str.replace(' days','')
edurefined['Average_Length_Suspension_Year_1_Pct'] = edurefined['Average_Length_Suspension_Year_1_Pct'].astype(float)
edurefined['Average_Length_Suspension_Year_2_Pct'] = edurefined['Average_Length_Suspension_Year_2_Pct'].astype(float)
edurefined['Avg_Suspension_Days'] = (edurefined['Average_Length_Suspension_Year_2_Pct'] + edurefined['Average_Length_Suspension_Year_1_Pct'])/2
#Replace missing values with median
edurefined['Avg_Misconduct_Rate'].fillna((edurefined['Avg_Misconduct_Rate'].median()), inplace=True)
edurefined['Avg_Suspension_Rate'].fillna((edurefined['Avg_Suspension_Rate'].median()), inplace=True)
edurefined['Avg_Teacher_Attendance_Rate'].fillna((edurefined['Avg_Teacher_Attendance_Rate'].median()), inplace=True)
edurefined['Avg_Student_Attendance_Rate'].fillna((edurefined['Avg_Student_Attendance_Rate'].median()), inplace=True)
edurefined['Mobility_Rate_Pct'].fillna((edurefined['Mobility_Rate_Pct'].median()), inplace=True)
edurefined['Chronic_Truancy_Pct'].fillna((edurefined['Chronic_Truancy_Pct'].median()), inplace=True)
edurefined['Avg_Suspension_Days'].fillna((edurefined['Avg_Suspension_Days'].median()), inplace=True)
edurefined['One_Year_Dropout_Rate_Year_1_Pct'].fillna((edurefined['One_Year_Dropout_Rate_Year_1_Pct'].median()), inplace=True)
edurefined['One_Year_Dropout_Rate_Year_2_Pct'].fillna((edurefined['One_Year_Dropout_Rate_Year_2_Pct'].median()), inplace=True)
edurefined['Freshmen_On_Track_School_Pct_Year_2'].fillna((edurefined['Freshmen_On_Track_School_Pct_Year_2'].median()), inplace=True)
edurefined['Freshmen_On_Track_School_Pct_Year_1'].fillna((edurefined['Freshmen_On_Track_School_Pct_Year_1'].median()), inplace=True)
edurefined['College_Enrollment_School_Pct_Year_2'].fillna((edurefined['College_Enrollment_School_Pct_Year_2'].median()), inplace=True)
edurefined['College_Enrollment_School_Pct_Year_1'].fillna((edurefined['College_Enrollment_School_Pct_Year_1'].median()), inplace=True)
edurefined['College_Persistence_School_Pct_Year_2'].fillna((edurefined['College_Persistence_School_Pct_Year_2'].median()), inplace=True)
edurefined['College_Persistence_School_Pct_Year_1'].fillna((edurefined['College_Persistence_School_Pct_Year_1'].median()), inplace=True)
edurefined['Teacher_Attendance_Year_1_Pct'].fillna((edurefined['Teacher_Attendance_Year_1_Pct'].median()), inplace=True)
edurefined['Teacher_Attendance_Year_2_Pct'].fillna((edurefined['Teacher_Attendance_Year_2_Pct'].median()), inplace=True)
edurefined['Misconducts_To_Suspensions_Year_1_Pct'].fillna((edurefined['Misconducts_To_Suspensions_Year_1_Pct'].median()), inplace=True)
edurefined['Misconducts_To_Suspensions_Year_2_Pct'].fillna((edurefined['Misconducts_To_Suspensions_Year_2_Pct'].median()), inplace=True)
edurefined['Suspensions_Per_100_Students_Year_1_Pct'].fillna((edurefined['Suspensions_Per_100_Students_Year_1_Pct'].median()), inplace=True)
edurefined['Suspensions_Per_100_Students_Year_2_Pct'].fillna((edurefined['Suspensions_Per_100_Students_Year_2_Pct'].median()), inplace=True)
edurefined['Average_Length_Suspension_Year_1_Pct'].fillna((edurefined['Average_Length_Suspension_Year_1_Pct'].median()), inplace=True)
edurefined['Average_Length_Suspension_Year_2_Pct'].fillna((edurefined['Average_Length_Suspension_Year_2_Pct'].median()), inplace=True)

#Convert latitude and longitude to geohash 
edurefined['geohash'] =  edurefined.apply(lambda x: pgh.encode(x.School_Latitude, x.School_Longitude, precision=5), axis=1)

edu_dfseven = edurefined.groupby('geohash').mean().reset_index()
edu_dfcount = edurefined.groupby('geohash')['Long_Name'].size().reset_index()
edu_dfseven = edu_dfseven.merge(edu_dfcount,on='geohash')
edu_dfseven = edu_dfseven.rename(columns={'Long_Name':'SchoolCount'})
edu_dfseven['Year'] = 2017
edu_dfseven.isna().sum()

#Follow similar apporach for other education datasets
#2016 edu data
edurefined = edusix[['Long_Name','Community Areas','School_Latitude','School_Longitude','Primary_Category','Teacher_Attendance_Year_1_Pct',
 'Teacher_Attendance_Year_2_Pct','Student_Attendance_Year_1_Pct',
 'Student_Attendance_Year_2_Pct','Misconducts_To_Suspensions_Year_1_Pct',
 'Misconducts_To_Suspensions_Year_2_Pct','Suspensions_Per_100_Students_Year_1_Pct',
'Suspensions_Per_100_Students_Year_2_Pct','Average_Length_Suspension_Year_1_Pct',
'Average_Length_Suspension_Year_2_Pct','Mobility_Rate_Pct','Chronic_Truancy_Pct','One_Year_Dropout_Rate_Year_1_Pct',
 'One_Year_Dropout_Rate_Year_2_Pct', 'Freshmen_On_Track_School_Pct_Year_2','Freshmen_On_Track_School_Pct_Year_1',
 'College_Enrollment_School_Pct_Year_2',
 'College_Enrollment_School_Pct_Year_1',
 'College_Persistence_School_Pct_Year_2',
 'College_Persistence_School_Pct_Year_1']]
#Compute average misconduct to suspensions rate
edurefined = edurefined.rename(columns={'Community Areas':'Community_Area'})
edurefined['Avg_Misconduct_Rate'] = (edurefined['Misconducts_To_Suspensions_Year_1_Pct'] + edurefined['Misconducts_To_Suspensions_Year_2_Pct'])/2
#Compute average suspension rate
edurefined['Avg_Suspension_Rate'] = (edurefined['Suspensions_Per_100_Students_Year_1_Pct'] + edurefined['Suspensions_Per_100_Students_Year_2_Pct'])/2
#Compute average attendance rate
edurefined['Avg_Student_Attendance_Rate'] = (edurefined['Student_Attendance_Year_1_Pct'] + edurefined['Student_Attendance_Year_2_Pct'])/2
#Compute average teacher attendance rate
edurefined['Avg_Teacher_Attendance_Rate'] = (edurefined['Teacher_Attendance_Year_1_Pct'] + edurefined['Teacher_Attendance_Year_2_Pct'])/2
edurefined['Average_Length_Suspension_Year_1_Pct'] = edurefined['Average_Length_Suspension_Year_1_Pct'].astype(str)
edurefined['Average_Length_Suspension_Year_2_Pct'] = edurefined['Average_Length_Suspension_Year_2_Pct'].astype(str)
edurefined['Average_Length_Suspension_Year_1_Pct'] = edurefined['Average_Length_Suspension_Year_1_Pct'].str.replace(' days','')
edurefined['Average_Length_Suspension_Year_2_Pct'] = edurefined['Average_Length_Suspension_Year_2_Pct'].str.replace(' days','')
edurefined['Average_Length_Suspension_Year_1_Pct'] = edurefined['Average_Length_Suspension_Year_1_Pct'].astype(float)
edurefined['Average_Length_Suspension_Year_2_Pct'] = edurefined['Average_Length_Suspension_Year_2_Pct'].astype(float)
edurefined['Avg_Suspension_Days'] = (edurefined['Average_Length_Suspension_Year_2_Pct'] + edurefined['Average_Length_Suspension_Year_1_Pct'])/2



#Drop Unwanted columns
#edurefined = edurefined.drop(columns=['Average_Length_Suspension_Year_1_Pct','Average_Length_Suspension_Year_2_Pct','Suspensions_Per_100_Students_Year_1_Pct','Suspensions_Per_100_Students_Year_2_Pct','Misconducts_To_Suspensions_Year_1_Pct','Misconducts_To_Suspensions_Year_2_Pct','Teacher_Attendance_Year_1_Pct','Teacher_Attendance_Year_2_Pct','Student_Attendance_Year_1_Pct','Student_Attendance_Year_2_Pct'])
edurefined.head()
#Replace missing values with median
edurefined['Avg_Misconduct_Rate'].fillna((edurefined['Avg_Misconduct_Rate'].median()), inplace=True)
edurefined['Avg_Suspension_Rate'].fillna((edurefined['Avg_Suspension_Rate'].median()), inplace=True)
edurefined['Avg_Teacher_Attendance_Rate'].fillna((edurefined['Avg_Teacher_Attendance_Rate'].median()), inplace=True)
edurefined['Avg_Student_Attendance_Rate'].fillna((edurefined['Avg_Student_Attendance_Rate'].median()), inplace=True)
edurefined['Mobility_Rate_Pct'].fillna((edurefined['Mobility_Rate_Pct'].median()), inplace=True)
edurefined['Chronic_Truancy_Pct'].fillna((edurefined['Chronic_Truancy_Pct'].median()), inplace=True)
edurefined['Avg_Suspension_Days'].fillna((edurefined['Avg_Suspension_Days'].median()), inplace=True)



edurefined['One_Year_Dropout_Rate_Year_1_Pct'].fillna((edurefined['One_Year_Dropout_Rate_Year_1_Pct'].median()), inplace=True)
edurefined['One_Year_Dropout_Rate_Year_2_Pct'].fillna((edurefined['One_Year_Dropout_Rate_Year_2_Pct'].median()), inplace=True)
edurefined['Freshmen_On_Track_School_Pct_Year_2'].fillna((edurefined['Freshmen_On_Track_School_Pct_Year_2'].median()), inplace=True)
edurefined['Freshmen_On_Track_School_Pct_Year_1'].fillna((edurefined['Freshmen_On_Track_School_Pct_Year_1'].median()), inplace=True)

edurefined['College_Enrollment_School_Pct_Year_2'].fillna((edurefined['College_Enrollment_School_Pct_Year_2'].median()), inplace=True)
edurefined['College_Enrollment_School_Pct_Year_1'].fillna((edurefined['College_Enrollment_School_Pct_Year_1'].median()), inplace=True)
edurefined['College_Persistence_School_Pct_Year_2'].fillna((edurefined['College_Persistence_School_Pct_Year_2'].median()), inplace=True)
edurefined['College_Persistence_School_Pct_Year_1'].fillna((edurefined['College_Persistence_School_Pct_Year_1'].median()), inplace=True)



edurefined['Teacher_Attendance_Year_1_Pct'].fillna((edurefined['Teacher_Attendance_Year_1_Pct'].median()), inplace=True)
edurefined['Teacher_Attendance_Year_2_Pct'].fillna((edurefined['Teacher_Attendance_Year_2_Pct'].median()), inplace=True)
edurefined['Misconducts_To_Suspensions_Year_1_Pct'].fillna((edurefined['Misconducts_To_Suspensions_Year_1_Pct'].median()), inplace=True)
edurefined['Misconducts_To_Suspensions_Year_2_Pct'].fillna((edurefined['Misconducts_To_Suspensions_Year_2_Pct'].median()), inplace=True)
edurefined['Suspensions_Per_100_Students_Year_1_Pct'].fillna((edurefined['Suspensions_Per_100_Students_Year_1_Pct'].median()), inplace=True)
edurefined['Suspensions_Per_100_Students_Year_2_Pct'].fillna((edurefined['Suspensions_Per_100_Students_Year_2_Pct'].median()), inplace=True)
edurefined['Average_Length_Suspension_Year_1_Pct'].fillna((edurefined['Average_Length_Suspension_Year_1_Pct'].median()), inplace=True)
edurefined['Average_Length_Suspension_Year_2_Pct'].fillna((edurefined['Average_Length_Suspension_Year_2_Pct'].median()), inplace=True)

edurefined['geohash'] =  edurefined.apply(lambda x: pgh.encode(x.School_Latitude, x.School_Longitude, precision=5), axis=1)

edu_dfsix = edurefined.groupby('geohash').mean().reset_index()
edu_dfcount = edurefined.groupby('geohash')['Long_Name'].size().reset_index()

edu_dfsix = edu_dfsix.merge(edu_dfcount,on='geohash')
edu_dfsix = edu_dfsix.rename(columns={'Long_Name':'SchoolCount'})
edu_dfsix['Year'] = 2016

edu_dfsix.isna().sum()

list(edufive.columns)

#2015 edu data

edurefined = edufive[['Long_Name','Community Areas','School_Latitude','School_Longitude','Primary_Category','Teacher_Attendance_Year_1_Pct',
 'Teacher_Attendance_Year_2_Pct','Student_Attendance_Year_1_Pct',
 'Student_Attendance_Year_2_Pct','Misconducts_To_Suspensions_Year_1_Pct',
 'Misconducts_To_Suspensions_Year_2_Pct','Suspensions_Per_100_Students_Year_1_Pct',
'Suspensions_Per_100_Students_Year_2_Pct','Average_Length_Suspension_Year_1_Pct',
'Average_Length_Suspension_Year_2_Pct','Mobility_Rate_Pct','Chronic_Truancy_Pct','One_Year_Dropout_Rate_Year_1_Pct',
 'One_Year_Dropout_Rate_Year_2_Pct', 'Freshmen_On_Track_School_Pct_Year_2','Freshmen_On_Track_School_Pct_Year_1',

 'College_Enrollment_School_Pct_Year_2',
 'College_Enrollment_School_Pct_Year_1',
 'College_Persistence_School_Pct_Year_2',
 'College_Persistence_School_Pct_Year_1']]
#Compute average misconduct to suspensions rate
edurefined = edurefined.rename(columns={'Community Areas':'Community_Area'})
edurefined['Avg_Misconduct_Rate'] = (edurefined['Misconducts_To_Suspensions_Year_1_Pct'] + edurefined['Misconducts_To_Suspensions_Year_2_Pct'])/2
#Compute average suspension rate
edurefined['Avg_Suspension_Rate'] = (edurefined['Suspensions_Per_100_Students_Year_1_Pct'] + edurefined['Suspensions_Per_100_Students_Year_2_Pct'])/2
#Compute average attendance rate
edurefined['Avg_Student_Attendance_Rate'] = (edurefined['Student_Attendance_Year_1_Pct'] + edurefined['Student_Attendance_Year_2_Pct'])/2
#Compute average teacher attendance rate
edurefined['Avg_Teacher_Attendance_Rate'] = (edurefined['Teacher_Attendance_Year_1_Pct'] + edurefined['Teacher_Attendance_Year_2_Pct'])/2
edurefined['Average_Length_Suspension_Year_1_Pct'] = edurefined['Average_Length_Suspension_Year_1_Pct'].astype(str)
edurefined['Average_Length_Suspension_Year_2_Pct'] = edurefined['Average_Length_Suspension_Year_2_Pct'].astype(str)
edurefined['Average_Length_Suspension_Year_1_Pct'] = edurefined['Average_Length_Suspension_Year_1_Pct'].str.replace(' days','')
edurefined['Average_Length_Suspension_Year_2_Pct'] = edurefined['Average_Length_Suspension_Year_2_Pct'].str.replace(' days','')
edurefined['Average_Length_Suspension_Year_1_Pct'] = edurefined['Average_Length_Suspension_Year_1_Pct'].astype(float)
edurefined['Average_Length_Suspension_Year_2_Pct'] = edurefined['Average_Length_Suspension_Year_2_Pct'].astype(float)
edurefined['Avg_Suspension_Days'] = (edurefined['Average_Length_Suspension_Year_2_Pct'] + edurefined['Average_Length_Suspension_Year_1_Pct'])/2





edurefined.head()
#Replace missing values with median
edurefined['Avg_Misconduct_Rate'].fillna((edurefined['Avg_Misconduct_Rate'].median()), inplace=True)
edurefined['Avg_Suspension_Rate'].fillna((edurefined['Avg_Suspension_Rate'].median()), inplace=True)
edurefined['Avg_Teacher_Attendance_Rate'].fillna((edurefined['Avg_Teacher_Attendance_Rate'].median()), inplace=True)
edurefined['Avg_Student_Attendance_Rate'].fillna((edurefined['Avg_Student_Attendance_Rate'].median()), inplace=True)
edurefined['Mobility_Rate_Pct'].fillna((edurefined['Mobility_Rate_Pct'].median()), inplace=True)
edurefined['Chronic_Truancy_Pct'].fillna((edurefined['Chronic_Truancy_Pct'].median()), inplace=True)
edurefined['Avg_Suspension_Days'].fillna((edurefined['Avg_Suspension_Days'].median()), inplace=True)
edurefined['Misconducts_To_Suspensions_Year_2_Pct'].fillna((edurefined['Misconducts_To_Suspensions_Year_2_Pct'].median()), inplace=True)
edurefined['Suspensions_Per_100_Students_Year_2_Pct'].fillna((edurefined['Suspensions_Per_100_Students_Year_2_Pct'].median()), inplace=True)
edurefined['Average_Length_Suspension_Year_2_Pct'].fillna((edurefined['Average_Length_Suspension_Year_2_Pct'].median()), inplace=True)


edurefined['One_Year_Dropout_Rate_Year_1_Pct'].fillna((edurefined['One_Year_Dropout_Rate_Year_1_Pct'].median()), inplace=True)
edurefined['One_Year_Dropout_Rate_Year_2_Pct'].fillna((edurefined['One_Year_Dropout_Rate_Year_2_Pct'].median()), inplace=True)
edurefined['Freshmen_On_Track_School_Pct_Year_2'].fillna((edurefined['Freshmen_On_Track_School_Pct_Year_2'].median()), inplace=True)
edurefined['Freshmen_On_Track_School_Pct_Year_1'].fillna((edurefined['Freshmen_On_Track_School_Pct_Year_1'].median()), inplace=True)

edurefined['College_Enrollment_School_Pct_Year_2'].fillna((edurefined['College_Enrollment_School_Pct_Year_2'].median()), inplace=True)
edurefined['College_Enrollment_School_Pct_Year_1'].fillna((edurefined['College_Enrollment_School_Pct_Year_1'].median()), inplace=True)
edurefined['College_Persistence_School_Pct_Year_2'].fillna((edurefined['College_Persistence_School_Pct_Year_2'].median()), inplace=True)
edurefined['College_Persistence_School_Pct_Year_1'].fillna((edurefined['College_Persistence_School_Pct_Year_1'].median()), inplace=True)


edurefined['Teacher_Attendance_Year_1_Pct'].fillna((edurefined['Teacher_Attendance_Year_1_Pct'].median()), inplace=True)
edurefined['Teacher_Attendance_Year_2_Pct'].fillna((edurefined['Teacher_Attendance_Year_2_Pct'].median()), inplace=True)
edurefined['Misconducts_To_Suspensions_Year_1_Pct'].fillna((edurefined['Misconducts_To_Suspensions_Year_1_Pct'].median()), inplace=True)
edurefined['Misconducts_To_Suspensions_Year_2_Pct'].fillna((edurefined['Misconducts_To_Suspensions_Year_2_Pct'].median()), inplace=True)
edurefined['Suspensions_Per_100_Students_Year_1_Pct'].fillna((edurefined['Suspensions_Per_100_Students_Year_1_Pct'].median()), inplace=True)
edurefined['Suspensions_Per_100_Students_Year_2_Pct'].fillna((edurefined['Suspensions_Per_100_Students_Year_2_Pct'].median()), inplace=True)
edurefined['Average_Length_Suspension_Year_1_Pct'].fillna((edurefined['Average_Length_Suspension_Year_1_Pct'].median()), inplace=True)
edurefined['Average_Length_Suspension_Year_2_Pct'].fillna((edurefined['Average_Length_Suspension_Year_2_Pct'].median()), inplace=True)

edurefined['geohash'] =  edurefined.apply(lambda x: pgh.encode(x.School_Latitude, x.School_Longitude, precision=5), axis=1)

edu_dffive = edurefined.groupby('geohash').mean().reset_index()
edu_dfcount = edurefined.groupby('geohash')['Long_Name'].size().reset_index()

edu_dffive = edu_dffive.merge(edu_dfcount,on='geohash')
edu_dffive = edu_dffive.rename(columns={'Long_Name':'SchoolCount'})
edu_dffive['Year'] = 2015

edu_dffive.isna().sum()

#Check for dataframe shapes
print(edu_df.shape)
print(edu_dfseven.shape)
print(edu_dfsix.shape)
print(edu_dffive.shape)




edu_df.columns

#Append Education dataframes for 3 years
final_edu_df = edu_df.append(edu_dfseven, ignore_index = True) 
final_edu_df = final_edu_df.append(edu_dfsix, ignore_index = True) 
final_edu_df = final_edu_df.append(edu_dffive, ignore_index = True) 
#final_edu_df = final_edu_df.append(edu_dffour, ignore_index = True)

final_edu_df.isna().sum()



final_edu_df = final_edu_df.drop(columns=['Chronic_Truancy_Pct','Community_Area'])
final_edu_df.fillna(0,inplace=True)
final_edu_df.isna().sum()

final_edu_df = final_edu_df.round(2)

final_edu_df.to_csv('C:/Data Analytics/Sem 3/Dataset/LocationData/Distances/EducationMerged.csv',index=False)