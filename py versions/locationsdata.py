# -*- coding: utf-8 -*-
"""LocationsData.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/185Qi73O1gK4E4H26ih1bxLUQv71ADplX
"""
#Distance computation reference: https://gist.github.com/rochacbruno/2883505

#Import libraries
import numpy as np
import pandas as pd
#Read location files
police = pd.read_csv('C://Data Analytics//Sem 3//Dataset//LocationData//Police_Stations.csv',error_bad_lines=False)
speed = pd.read_csv('C://Data Analytics//Sem 3//Dataset//LocationData//Speed_Camera_Locations.csv',error_bad_lines=False)
red = pd.read_csv('C://Data Analytics//Sem 3//Dataset//LocationData//Red_Light_Camera_Locations.csv',error_bad_lines=False)
#Read crime data
crime = pd.read_csv('C:\Data Analytics\Sem 3\Dataset\Final\SelectedCrimes.csv')
crime.head()
#Extract only required columns from police station, red-light camera and speed camera datasets
police = police[['LATITUDE','LONGITUDE']]
red = red[['LATITUDE','LONGITUDE']]
speed = speed[['LATITUDE','LONGITUDE']]
#Check for NA values in each dataset
red.isna().sum()
police.isna().sum()
speed.isna().sum()
#Verify the shape of each dataframe
print(red.shape)
print(speed.shape)
print(police.shape)

#Calculate distance between two latitudes and longitudes
import math
def distance(origin, destination):
    lat1, lon1 = origin
    lat2, lon2 = destination
    radius = 6371 # km
    dlat = math.radians(lat2-lat1)
    dlon = math.radians(lon2-lon1)
    a = math.sin(dlat/2) * math.sin(dlat/2) + math.cos(math.radians(lat1)) \
        * math.cos(math.radians(lat2)) * math.sin(dlon/2) * math.sin(dlon/2)
    c = 2 * math.atan2(math.sqrt(a), math.sqrt(1-a))
    d = round(radius * c,2)
return d

#https://gist.github.com/rochacbruno/2883505

import datetime
#Calculate distance between two points and return minimum for speed camera locations
distanceall = pd.DataFrame(columns=['id','dist','latitude','longitude'])
distancemin = pd.DataFrame(columns=['id','dist','latitude','longitude'])
distanceall['dist'] = None
distancemin['dist'] = None
print(datetime.datetime.now())
for i in range(0,len(crime),1):
    print(i)
    for j in range(0,len(speed),1):
        dist = distance((crime.iloc[i]['Latitude'].astype(float),crime.iloc[i]['Longitude'].astype(float)),
                        (speed.iloc[j]['LATITUDE'].astype(float),speed.iloc[j]['LONGITUDE'].astype(float)))
        lat = crime.iloc[i]['Latitude']
        lon = crime.iloc[i]['Longitude']
        distanceall.loc[j,'dist'] = dist
        distanceall.loc[j,'latitude'] = lat
        distanceall.loc[j,'longitude'] = lon
        distanceall.loc[j,'id'] = i
        d = len(distanceall)
        if j == (len(speed)-1):
            mindist = distanceall['dist'].min()
    distancemin.loc[i,'dist'] = mindist
    distancemin.loc[i,'latitude'] = lat
    distancemin.loc[i,'longitude'] = lon
    distancemin.loc[i,'id'] = i
print(datetime.datetime.now())


#Calculate distance between two points and return minimum for red-light camera locations
distanceall = pd.DataFrame(columns=['id','dist','latitude','longitude'])
distancemin = pd.DataFrame(columns=['id','dist','latitude','longitude'])
distanceall['dist'] = None
distancemin['dist'] = None
print(datetime.datetime.now())
for i in range(0,len(crime),1):
    print(i)
    for j in range(0,len(speed),1):
        dist = distance((crime.iloc[i]['Latitude'].astype(float),crime.iloc[i]['Longitude'].astype(float)),
                        (red.iloc[j]['LATITUDE'].astype(float),red.iloc[j]['LONGITUDE'].astype(float)))
        lat = crime.iloc[i]['Latitude']
        lon = crime.iloc[i]['Longitude']
        distanceall.loc[j,'dist'] = dist
        distanceall.loc[j,'latitude'] = lat
        distanceall.loc[j,'longitude'] = lon
        distanceall.loc[j,'id'] = i
        d = len(distanceall)
        if j == (len(speed)-1):
            mindist = distanceall['dist'].min()
    distancemin.loc[i,'dist'] = mindist
    distancemin.loc[i,'latitude'] = lat
    distancemin.loc[i,'longitude'] = lon
    distancemin.loc[i,'id'] = i
print(datetime.datetime.now())

#Calculate distance between two points and return minimum for police stations
distanceall = pd.DataFrame(columns=['id','dist','latitude','longitude'])
distancemin = pd.DataFrame(columns=['id','dist','latitude','longitude'])
distanceall['dist'] = None
distancemin['dist'] = None
print(datetime.datetime.now())
for i in range(0,len(crime),1):
    print(i)
    for j in range(0,len(speed),1):
        dist = distance((crime.iloc[i]['Latitude'].astype(float),crime.iloc[i]['Longitude'].astype(float)),
                        (police.iloc[j]['LATITUDE'].astype(float),police.iloc[j]['LONGITUDE'].astype(float)))
        lat = crime.iloc[i]['Latitude']
        lon = crime.iloc[i]['Longitude']
        distanceall.loc[j,'dist'] = dist
        distanceall.loc[j,'latitude'] = lat
        distanceall.loc[j,'longitude'] = lon
        distanceall.loc[j,'id'] = i
        d = len(distanceall)
        if j == (len(speed)-1):
            mindist = distanceall['dist'].min()
    distancemin.loc[i,'dist'] = mindist
    distancemin.loc[i,'latitude'] = lat
    distancemin.loc[i,'longitude'] = lon
    distancemin.loc[i,'id'] = i
print(datetime.datetime.now())

distancemin.head()
distancemin['dist'] = distancemin['dist'].astype(float)
distancemin.to_csv('C:/Data Analytics/Sem 3/Dataset/Final/Policedist.csv',index=False)
distancemin.to_csv('C:/Data Analytics/Sem 3/Dataset/Final/Speeddist.csv',index=False)
distancemin.to_csv('C:/Data Analytics/Sem 3/Dataset/Final/Reddist.csv',index=False)